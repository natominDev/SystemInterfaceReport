{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["AlertMessage","props","data","msg","JSON","stringify","className","name","mail","TestComponent","useState","val","setVal","msg2","setMsg2","useEffect","total","i","type","onChange","event","target","value","InputAge","age","setAge","onClick","CheckBoxList","setFlag1","setFlag2","setFlag3","id","e","checked","htmlFor","App","setName","setMail","form","setForm","class","setData","onSubmit","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e25110f.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\n\nfunction AlertMessage(props) {\n  const data = props.data;\n  const msg = JSON.stringify(data);\n\n  return (\n    <div className=\"alert alert-primary h text-primary\">\n      <h5>{msg}</h5>\n      <hr />\n      <table className=\"table h6\">\n        <tbody>\n          <tr><th>Name</th><td>{data.name}</td></tr>\n          <tr><th>Mail</th><td>{data.mail}</td></tr>\n        </tbody>\n      </table>\n    </div>\n  );\n}\n\nfunction TestComponent(props) {\n  const [val, setVal] = useState(0);\n  const [msg2, setMsg2] = useState(\"set a number...\");\n\n  const doChange = (event) => {\n    setVal(event.target.value);\n  }\n\n  useEffect(() => {\n    let total = 0;\n    for(let i = 0; i <= val; ++i){\n      total += i;\n    }\n    setMsg2(\"total: \" + total + \".\");\n  });\n\n  return (\n    <div>\n      <p>{msg2}</p>\n      <div className=\"form-group\">\n        <lebel>Input:</lebel>\n        <input type=\"number\" className=\"form-control\" onChange={doChange} />\n      </div>\n    </div>\n  );\n}\n\nfunction InputAge() {\n  const [age, setAge] = useState(0);\n  const addAge = () => {\n    setAge(age + 1);\n  }\n  const decAge = () => {\n    if(age > 0) setAge(age - 1);\n  }\n  return (\n    <div>\n      <p className=\"h5 mb-3 text-left\">Age: {age}</p>\n      <div>\n        <button className=\"btn btn-primary\" onClick={addAge}>\n          +1\n        </button>\n        <button className=\"btn btn-primary\" onClick={decAge}>\n          -1\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction CheckBoxList() {\n  const [flag1, setFlag1] = useState(false);\n  const changeFlag1 = (e) => {\n    setFlag1(e.target.checked);\n  }\n  const [flag2, setFlag2] = useState(false);\n  const changeFlag2 = (e) => {\n    setFlag2(e.target.checked);\n  }\n  const [flag3, setFlag3] = useState(false);\n  const changeFlag3 = (e) => {\n    setFlag3(e.target.checked);\n  }\n  return (\n    <div className=\"form-group h6 text-left pt-3\">\n      <input type=\"checkbox\" className=\"form-check-input\"\n        id=\"check1\" onChange={changeFlag1} />\n      <label className=\"form-check-label\" htmlFor=\"check1\">\n        Are you fine?\n      </label>\n      <hr />\n      <input type=\"checkbox\" className=\"form-check-input\"\n        id=\"check2\" onChange={changeFlag2} />\n      <label className=\"form-check-label\" htmlFor=\"check2\">\n        Reset your choise.\n      </label>\n      <hr />\n      <input type=\"checkbox\" className=\"form-check-input\"\n        id=\"check3\" onChange={changeFlag3} />\n      <label className=\"form-check-label\" htmlFor=\"check3\">\n        Are you fine?\n      </label>          \n    </div>\n  );\n}\n\nfunction App() {\n  const [count, setCount] = useState(0);\n  const clickFunc = () => {\n    setCount(count + 1);\n  }\n  const [flag, setFlag] = useState(false);\n  const changeFlag = (e) => {\n    setFlag(e.target.checked);\n  }\n  const [msg, setMsg] = useState(\"This is sample message!\");\n  const doAction = () => {\n    let res = window.prompt(\"type your name\");\n    setMsg(\"Hello, \" + res + \"!!\");\n  }\n  const [name, setName] = useState(\"\");\n  const doChangeName = (event) => {\n    setName(event.target.value);\n  }\n  const [mail, setMail] = useState(\"\");\n  const doChangeMail = (event) => {\n    setMail(event.target.value);\n  }\n  const [form, setForm] = useState({name:'no name', mail:'no mail'});\n  const doSubmit = (event) => {\n    setForm({name:name, mail:mail});\n    event.preventDefault();\n  }\n  \n  return (\n    <div className=\"App\">\n      <h1 class=\"bg-primary text-white display-4\">Reservaton Form</h1>\n      <div class=\"container\">\n        <h4 className=\"my-3\">Hooks sample!</h4>\n        { /*flag ?\n        <div className=\"alert alert-primary text-center\">\n          <p className=\"h5 mb-3\">click: {count} times!</p>\n          <div>\n            <button className=\"btn btn-primary\" onClick={clickFunc}>\n              Click me\n            </button>\n          </div>\n        </div>\n        :\n        <div className=\"card p-3 border-primary text-center\">\n          <p className=\"h5 mb-3 text-left text-primary\">\n            click: {count} times!\n          </p>\n          <div>\n            <button className=\"btn btn-primary\" onClick={clickFunc}>\n              Click me\n            </button>\n          </div>\n        </div>\n        */}\n        {/*\n        <div className=\"form-group h6 text-center pt-3\">\n          <input type=\"checkbox\" className=\"form-check-input\"\n            id=\"check0\" onChange={changeFlag} />\n          <label className=\"form-check-label\" htmlFor=\"check0\">\n            Change form style.\n          </label>\n        </div>\n\n        <div className=\"text-center\">\n          <p>{msg}</p>\n          <button onClick={doAction} className=\"btn btn-primary\">\n            Click me!\n          </button>\n        </div>\n        */}\n        <AlertMessage data={form} setData={setForm} />\n        <form onSubmit={doSubmit}>\n          <div className=\"form-group\">\n            <label>Name:</label>\n            <input type=\"text\" className=\"form-control\" onChange={doChangeName} />\n          </div>\n          <div className=\"form-group\">\n            <label>Mail:</label>\n            <input type=\"text\" className=\"form-control\" onChange={doChangeMail} />\n          </div>\n          <input type=\"submit\" className=\"btn btn-primary\" value=\"Click\" />\n        </form>\n\n        <TestComponent />\n\n        {/* input age */}\n        <InputAge />\n\n        {/* confirm condition */}\n        <CheckBoxList />\n\n      </div>\n    </div>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}